{"0": {
    "doc": "Configuración",
    "title": "Configuración",
    "content": "Pasos para configurar un proyecto en Laravel en un servidor de producción. ",
    "url": "/dev-docs/_site/productivo/configuracion/",
    "relUrl": "/productivo/configuracion/"
  },"1": {
    "doc": "Configuración",
    "title": "Contenido",
    "content": ". | Crear repositorio Git | Instalar dependencias | Asignar permisos a usuarios | Cambiar permisos a carpetas | Crear BD | Configuración de la aplicación | Generar llave de la aplicación | Importar base de datos | Configurar VirtualHost | . Crear repositorio Git . Crear carpeta con el nombre de la aplicación repositorio e iniciar Git . git init . Agregar repositorio remoto en GitLab / GitHub mediante HTTPS / SSH . git remote add origin https://gitlab.com/usuario/repositorio.git git remote add origin git@github.com:usuario/repositorio.git . Actualizar cambios . git pull origin master . Instalar dependencias . composer install . Asignar permisos a usuarios . sudo chown -R usuario:grupo repositorio . Cambiar permisos a carpetas . sudo chmod -R 775 storage sudo chmod -R 775 bootstrap/cache . Crear BD . | Nombre: db_repositorio | Character set: utf8mb4 | Collation: utf8mb4_general_ci | . Configuración de la aplicación . Configurar archivo .env . sudo cp .env.example .env . Generales de la aplicación . APP_NAME=Repositorio APP_ENV=production APP_DEBUG=false . Conexión a BD . DB_DATABASE=db_repositorio DB_USERNAME= DB_PASSWORD= . Generar llave de la aplicación . php artisan key:generate . Importar base de datos . Creación de tablas . php artisan migrate . Inserción de valores iniciales en catálogos . php artisan db:seed . O importar desde un archivo . Configurar VirtualHost . En CentOS /etc/httpd/conf/httpd.conf . &lt;VirtualHost *&gt; DocumentRoot \"/var/www/repositorio/public\" ServerName repositorio.dominio.com &lt;Directory \"/var/www/repositorio/public\"&gt; DirectoryIndex index.php AllowOverride All Allow from all Require all granted &lt;/Directory&gt; &lt;/VirtualHost&gt; . ",
    "url": "/dev-docs/_site/productivo/configuracion/#contenido",
    "relUrl": "/productivo/configuracion/#contenido"
  },"2": {
    "doc": "Entorno",
    "title": "Configuración del entorno",
    "content": "Configuración del entorno en diferentes SO. ",
    "url": "/dev-docs/_site/entorno/#configuraci%C3%B3n-del-entorno",
    "relUrl": "/entorno/#configuración-del-entorno"
  },"3": {
    "doc": "Entorno",
    "title": "Entorno de desarrollo",
    "content": "Laragon (Full) . | Laragon | . XAMPP . | XAMPP | Composer | Git | . ",
    "url": "/dev-docs/_site/entorno/#entorno-de-desarrollo",
    "relUrl": "/entorno/#entorno-de-desarrollo"
  },"4": {
    "doc": "Entorno",
    "title": "Entorno",
    "content": " ",
    "url": "/dev-docs/_site/entorno/",
    "relUrl": "/entorno/"
  },"5": {
    "doc": "Productivo",
    "title": "Productivo",
    "content": "Implementación de proyecto en Laravel en producción. Se muestran las principales configuraciones y pasos a seguir para liberar un proyecto en Laravel a un servidor de producción basado en GNU/Linux. ",
    "url": "/dev-docs/_site/productivo/",
    "relUrl": "/productivo/"
  },"6": {
    "doc": "Productivo",
    "title": "Prerequisitos",
    "content": "Sistema operativo CentOS, Debian, Ubuntu Framework Laravel 6.2+ Base de datos MariaDB 10.1+ Lenguaje PHP 7.2+ Dependencias Composer 2.0+ Versionado Git 2.1+ ",
    "url": "/dev-docs/_site/productivo/#prerequisitos",
    "relUrl": "/productivo/#prerequisitos"
  },"7": {
    "doc": "Inicio",
    "title": "Documentación",
    "content": "Documentación para desarrollo full-stack . ",
    "url": "/dev-docs/_site/#documentaci%C3%B3n",
    "relUrl": "/#documentación"
  },"8": {
    "doc": "Inicio",
    "title": "Inicio",
    "content": " ",
    "url": "/dev-docs/_site/",
    "relUrl": "/"
  },"9": {
    "doc": "Ramas",
    "title": "Ramas",
    "content": "Desarrollo en local mediante ramas en Git . ",
    "url": "/dev-docs/_site/productivo/ramas/",
    "relUrl": "/productivo/ramas/"
  },"10": {
    "doc": "Ramas",
    "title": "Contenido",
    "content": ". | Siempre verificar cambios antes de iniciar | Crear rama dev o el nombre que se requiera para realizar un cambio en el proyecto | Cambiar a rama dev y trabajar los cambios | Indicar en app/Http/Helpers.php el número de versión | Registrar cambios en rama dev | Cambiar a rama master y fusionar rama dev | Versionar el proyecto | Publicar cambios en GitLab y versión | Cambiar a rama dev y copiar rama master para actualizar | . Siempre verificar cambios antes de iniciar . git pull origin master . Crear rama dev o el nombre que se requiera para realizar un cambio en el proyecto . git branch dev . Cambiar a rama dev y trabajar los cambios . git checkout dev . Indicar en app/Http/Helpers.php el número de versión . function version() { return 'v0.0.x'; } . Registrar cambios en rama dev . git add . git commit -m \"Mensaje\" . Cambiar a rama master y fusionar rama dev . git checkout master git merge dev . Versionar el proyecto . git tag v0.0.x . Publicar cambios en GitLab y versión . git push origin master git push origin --tags . Cambiar a rama dev y copiar rama master para actualizar . git checkout dev git merge master . ",
    "url": "/dev-docs/_site/productivo/ramas/#contenido",
    "relUrl": "/productivo/ramas/#contenido"
  },"11": {
    "doc": "Utilerías",
    "title": "Utilerías",
    "content": "Instrucciones útiles al actualizar versión del repositorio . ",
    "url": "/dev-docs/_site/productivo/utilerias/",
    "relUrl": "/productivo/utilerias/"
  },"12": {
    "doc": "Utilerías",
    "title": "Contenido",
    "content": ". | Al actualizar | Reiniciar servidor | Ruta de archivo log | Remover caché en .gitignore | Git log &amp; branches | Refrescar base de datos | . Al actualizar . php artisan config:clear php artisan cache:clear php artisan view:clear composer dump-autoload . Reiniciar servidor . sudo apachectl restart sudo service httpd restart . Ruta de archivo log . storage/logs/laravel.log . Remover caché en .gitignore . git rm -r --cached . Git log &amp; branches . git log --oneline git log --oneline --all --decorate --graph . Refrescar base de datos . Cuando las tablas tuvieron cambios . php artisan migrate:fresh --seed . Cuando se desea solamente setear a valores iniciales . php artisan db:seed . ",
    "url": "/dev-docs/_site/productivo/utilerias/#contenido",
    "relUrl": "/productivo/utilerias/#contenido"
  }
}
